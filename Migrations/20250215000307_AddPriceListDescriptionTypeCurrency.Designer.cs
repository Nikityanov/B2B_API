// <auto-generated />
using System;
using B2B_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace B2B_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250215000307_AddPriceListDescriptionTypeCurrency")]
    partial class AddPriceListDescriptionTypeCurrency
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("B2B_API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("B2B_API.Models.PriceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceListType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SellerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("PriceLists");
                });

            modelBuilder.Entity("B2B_API.Models.PriceListProduct", b =>
                {
                    b.Property<int>("PriceListId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SpecialPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("PriceListId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceListProducts");
                });

            modelBuilder.Entity("B2B_API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Characteristics")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("ImageGallery")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("B2B_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActualAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("BankBIK")
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("BankName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("INN")
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("LegalAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("OKPO")
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("UNP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserRole")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PriceListUser", b =>
                {
                    b.Property<int>("AccessiblePriceListsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedBuyersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccessiblePriceListsId", "AllowedBuyersId");

                    b.HasIndex("AllowedBuyersId");

                    b.ToTable("PriceListUser");
                });

            modelBuilder.Entity("B2B_API.Models.PriceList", b =>
                {
                    b.HasOne("B2B_API.Models.Product", null)
                        .WithMany("PriceLists")
                        .HasForeignKey("ProductId");

                    b.HasOne("B2B_API.Models.User", "Seller")
                        .WithMany("OwnedPriceLists")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("B2B_API.Models.PriceListProduct", b =>
                {
                    b.HasOne("B2B_API.Models.PriceList", "PriceList")
                        .WithMany("Products")
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B2B_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceList");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("B2B_API.Models.Product", b =>
                {
                    b.HasOne("B2B_API.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PriceListUser", b =>
                {
                    b.HasOne("B2B_API.Models.PriceList", null)
                        .WithMany()
                        .HasForeignKey("AccessiblePriceListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B2B_API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("AllowedBuyersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("B2B_API.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("B2B_API.Models.PriceList", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("B2B_API.Models.Product", b =>
                {
                    b.Navigation("PriceLists");
                });

            modelBuilder.Entity("B2B_API.Models.User", b =>
                {
                    b.Navigation("OwnedPriceLists");
                });
#pragma warning restore 612, 618
        }
    }
}
